# This block is required by NGINX for process management
events {}

http {
    # Define the locations of your backend services
    # Docker Compose lets us use service names as hostnames
    upstream auth_service {
        server auth_service:3001;
    }
    upstream chat_service {
        server chat_service:3002;
    }
    upstream monolith {
        server monolith:8000;
    }

    server {
        listen 80;

        # Public routes for login/register
        location /api/v1/users/ {
            proxy_pass http://auth_service;
        }

        # Internal-only location for verifying tokens
        location = /auth-verify {
            internal; # Can only be accessed by other NGINX locations
            proxy_pass http://auth_service/api/v1/users/verify;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Cookie $http_cookie;
        }

        # Protected chat routes
        location /api/v1/chats/ {
            auth_request /auth-verify;
            
            # Take the User ID from the auth service's response header
            # and add it to the request going to the chat service
            proxy_set_header X-User-Id $upstream_http_x_user_id;

            proxy_pass http://chat_service;
        }

        # Protected monolith routes (catch-all)
        location / {
            auth_request /auth-verify;
            proxy_set_header X-User-Id $upstream_http_x_user_id;

            proxy_pass http://monolith;
        }
    }
}